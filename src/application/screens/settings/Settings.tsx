import React, { useState } from "react";
import "./Settings.css"; // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ CSS –¥–ª—è —Å—Ç–∏–ª–µ–π

const SettingsScreen: React.FC = () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
  const [username, setUsername] = useState("@Maria_Lisachenko");
  const [fullName, setFullName] = useState("–ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–µ–µ–≤–Ω–∞ –õ–∏—Å–∞—á–µ–Ω–∫–æ");
  const [about, setAbout] = useState("");
  const [role, setRole] = useState("both");
  const [trainer, setTrainer] = useState("@–¢—Ä–µ–Ω–µ—Ä");
  const [sprintWeeks, setSprintWeeks] = useState("4");

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    const data = {
      username,
      fullName,
      about,
      role,
      trainer,
      sprintWeeks
    };

    // TODO –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∫ –±—ç–∫—É
  };

  return (
    <div className="settings-container">
      <form onSubmit={handleSubmit}>
        {/* Profile Picture */}
        <div className="profile-picture-container">
          <label htmlFor="profile-picture-upload" className="profile-picture-label">
            <div className="profile-picture">
              <span className="camera-icon">üì∑</span>
            </div>
            <input
              id="profile-picture-upload"
              type="file"
              accept="image/*"
              className="hidden-input"
            />
          </label>
        </div>

        {/* Personal Information */}
        <h2 className="section-title">–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
        <input
          type="text"
          value={username}
          disabled
          className="text-input disabled-input"
        />
        <input
          type="text"
          placeholder="–§–ò–û"
          value={fullName}
          onChange={(e) => setFullName(e.target.value)}
          className="text-input"
        />
        <textarea
          placeholder="–û —Å–µ–±–µ"
          value={about}
          onChange={(e) => setAbout(e.target.value)}
          className="text-input textarea"
        />

        {/* Review Onboarding Button */}
        <button type="button" className="secondary-button">–ü–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥</button>

        {/* Role Selection */}
        <h2 className="section-title">–†–æ–ª—å</h2>
        <div className="radio-group">
          <label className="radio-label">
            <input
              type="radio"
              name="role"
              value="client"
              checked={role === 'client'}
              onChange={() => setRole('client')}
            /> –¢–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç
          </label>
          <label className="radio-label">
            <input
              type="radio"
              name="role"
              value="both"
              checked={role === 'both'}
              onChange={() => setRole('both')}
            /> –ò –∫–ª–∏–µ–Ω—Ç, –∏ —Ç—Ä–µ–Ω–µ—Ä
          </label>
        </div>

        {/* Trainer Section */}
        <h2 className="section-title">–ú–æ–π —Ç—Ä–µ–Ω–µ—Ä</h2>
        <input
          type="text"
          value={trainer}
          disabled
          className="text-input disabled-input"
        />

        {/* Sprint Weeks Section */}
        <h2 className="section-title">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å –≤ —Å–ø—Ä–∏–Ω—Ç–µ</h2>
        <select
          value={sprintWeeks}
          onChange={(e) => setSprintWeeks(e.target.value)}
          className="text-input"
        >
          <option value="3">3</option>
          <option value="4">4</option>
        </select>

        {/* Save Button */}
        <button type="submit" className="primary-button">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
      </form>
    </div>
  );
};

export default SettingsScreen;
